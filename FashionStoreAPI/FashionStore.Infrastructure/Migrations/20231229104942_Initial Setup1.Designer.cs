// <auto-generated />
using System;
using FashionStore.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FashionStore.Infrastructure.Migrations
{
    [DbContext(typeof(FashionStoreContext))]
    [Migration("20231229104942_Initial Setup1")]
    partial class InitialSetup1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FashionStore.Infrastructure.Entity.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryCode = "USA",
                            CurrencyCode = "USD",
                            Name = "United States of America"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryCode = "DEU",
                            CurrencyCode = "EUR",
                            Name = "Deutschland"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryCode = "AUS",
                            CurrencyCode = "AUD",
                            Name = "Australia"
                        });
                });

            modelBuilder.Entity("FashionStore.Infrastructure.Entity.CurrencyExchangeRate", b =>
                {
                    b.Property<int>("CurrencyExchangeRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyExchangeRateId"));

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ValidFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyExchangeRateId");

                    b.ToTable("CurrencyExchangeRates");

                    b.HasData(
                        new
                        {
                            CurrencyExchangeRateId = 1,
                            CurrencyCode = "USD",
                            ExchangeRate = 1.24m,
                            ValidFromDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CurrencyExchangeRateId = 2,
                            CurrencyCode = "EUR",
                            ExchangeRate = 1.14m,
                            ValidFromDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CurrencyExchangeRateId = 3,
                            CurrencyCode = "AUD",
                            ExchangeRate = 1.92m,
                            ValidFromDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CurrencyExchangeRateId = 4,
                            CurrencyCode = "USD",
                            ExchangeRate = 1.29m,
                            ValidFromDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValidToDate = new DateTime(2023, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CurrencyExchangeRateId = 5,
                            CurrencyCode = "EUR",
                            ExchangeRate = 1.16m,
                            ValidFromDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValidToDate = new DateTime(2023, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FashionStore.Infrastructure.Entity.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Mens t-shirt, size medium",
                            Name = "T-shirt",
                            Price = 19.99m
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Womens jeans, size small",
                            Name = "Jeans",
                            Price = 45.99m
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Summer hat, one size",
                            Name = "Hat",
                            Price = 10.99m
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Unisex winter jacket, size large",
                            Name = "Coat",
                            Price = 80.99m
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Womens fashion footwear, size 37",
                            Name = "Trainers",
                            Price = 55.99m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
